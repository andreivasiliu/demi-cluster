ssl_certificate /var/demi/certs/demi.ro.crt;
ssl_certificate_key /var/demi/certs/demi.ro.key;

geoip_country /usr/share/GeoIP/GeoIP.dat;

map $geoip_country_code $country {
    default other;
    RO ro;
}

geo $subnet {
    default remote;
    192.168.0.0/16 local;
}

# Disable cross-site scripting
add_header X-Frame-Options SAMEORIGIN always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options nosniff always;
# Enable HSTS (always use https)
add_header Strict-Transport-Security "max-age=7776000; includeSubDomains" always;
# Disable referrer for outgoing links
add_header Referrer-Policy no-referrer always;
# Disable TLSv1/TLSv1.1
ssl_protocols TLSv1.2 TLSv1.3;

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    server_name _;

    # location /.well-known {
    #     return 404;
    # }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        # FIXME: Encrypt
        proxy_pass "http://192.168.16.30:80";
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name conduit-dev.demi.ro;

    location /.well-known/matrix/server {
        return 200 '{"m.server": "conduit-dev.demi.ro:443"}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location /.well-known/matrix/client {
        return 200 '{"m.homeserver": {"base_url": "https://conduit-dev.demi.ro"}}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        # FIXME: Encrypt
        proxy_pass "http://192.168.16.30:80";
    }
}

# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;

#     server_name synapse-dev.demi.ro;

#     location /.well-known/matrix/server {
#         return 200 '{"m.server": "synapse-dev.demi.ro:443"}';
#         default_type application/json;
#         add_header Access-Control-Allow-Origin *;
#     }

#     location /.well-known/matrix/client {
#         return 200 '{"m.homeserver": {"base_url": "https://synapse-dev.demi.ro"}}';
#         default_type application/json;
#         add_header Access-Control-Allow-Origin *;
#     }

#     location / {
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $remote_addr;

#         # FIXME: Encrypt
#         proxy_pass "http://192.168.15.101:8008";
#     }
# }

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name fluctlight-dev.demi.ro;

    location /.well-known/matrix/server {
        return 200 '{"m.server": "fluctlight-dev.demi.ro:443"}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location /.well-known/matrix/client {
        return 200 '{"m.homeserver": {"base_url": "https://fluctlight-dev.demi.ro"}}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location ~ ^(/admin/view|/_matrix) {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        # FIXME: Encrypt
        proxy_pass "http://192.168.15.60:8008";
    }

    location / {
        return 401;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name demi.ro www.demi.ro;

    root /var/www/html;

    location /term {
        return 301 "https://term.demi.ro";
    }

    location /nas {
        return 301 "https://nas.demi.ro";
    }

    location /ro-files/ {
        set $source "$country-$subnet";
        if ($source = "other-remote") {
            return 401;
        }
        proxy_pass "http://192.168.15.2:81/ro-files/";
    }

    location /ro-files {
        return 302 "/ro-files/";
    }

    location /z80/ {
        proxy_pass "http://192.168.15.2:81/z80/";
    }

    location /z80/z80emu.wasm {
        add_header Content-Type application/wasm;
        proxy_pass "http://192.168.15.2:81/z80/z80emu.wasm";
    }

    location /z80 {
        return 302 "/z80/";
    }

    location /k/ {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        # FIXME: Encrypt
        # FIXME: De-normalize
        proxy_pass "http://192.168.16.30:80/k/";
    }

    location /.well-known/matrix/server {
        return 200 '{"m.server": "matrix.demi.ro:443"}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location /.well-known/matrix/client {
        return 200 '{"m.homeserver": {"base_url": "https://matrix.demi.ro"}}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    location / {
        try_files $uri $uri/ =404;
    }
}

# books.demi.ro proxies to the Books share via WebDAV on the NAS
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name books.demi.ro;

    root /var/www/html;

    location / {
        client_max_body_size 500M;

        proxy_pass http://192.168.15.3:80/remote.php/dav/files/carti/;
    }
}

# Cache for nas.demi.ro/check_auth
uwsgi_cache_path /var/cache/nginx.demi.auth levels=1 keys_zone=auth_cache:1m inactive=60m max_size=1m;

# nas.demi.ro proxies to the NAS, but only if authenticated first
# It's password protected by itself, but may have vulnerabilities
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name nas.demi.ro;

    location = /check_auth {
        internal;

        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
        uwsgi_pass_request_body off;

        uwsgi_cache auth_cache;
        uwsgi_cache_key "$cookie_auth_key";
    }

    location = /key {
        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
    }

    location = /get_cookie {
        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
    }

    location = /not-authorized.html {
        root /var/www/html;
    }

    location / {
        auth_request /check_auth;
        error_page 401 = /not-authorized.html;
        proxy_pass http://192.168.15.2:8080;
    }
}

# term.demi.ro is a web terminal
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name term.demi.ro;

    location = /check_auth {
        internal;

        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
        uwsgi_pass_request_body off;

        uwsgi_cache auth_cache;
        uwsgi_cache_key "$cookie_auth_key";
    }

    location = /key {
        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
    }

    location = /get_cookie {
        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
        include uwsgi_params;
    }

    location = /not-authorized.html {
        root /var/www/html;
    }

    location / {
        auth_request /check_auth;
        error_page 401 = /not-authorized.html;
        proxy_pass http://unix:/var/demi/ttyd/$cookie_auth_user.sock:/$uri$is_args$args;

        # Gotta go fast
        proxy_buffering off;

        # The default of 60s keeps resetting the terminal
        proxy_read_timeout 30d;

        # Enable websockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }
}

# key.demi.ro provides authentication and authorization via single sign-on
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name key.demi.ro;

    include uwsgi_params;

    location / {
        uwsgi_pass unix:///run/uwsgi/app/sso-auth/socket;
    }
}
